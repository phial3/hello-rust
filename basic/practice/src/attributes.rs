// 属性 是由一个#开启，后面紧接着一个[]，里面便是属性的具体内容，它可以有如下几种写法：
//
// 单个标识符代表的属性名，如#[unix]
// 单个标识符代表属性名，后面紧跟着一个=，然后再跟着一个字面量（Literal），组成一个键值对，如#[link(name = “openssl”)]
// 单个标识符代表属性名，后面跟着一个逗号隔开的子属性的列表，如#[cfg(and(unix, not(windows)))]
// 在#后面还可以紧跟一个!，比如#![feature(box_syntax)]，这表示这个属性是应用于它所在的这个Item。而如果没有!则表示这个属性仅应用于紧接着的那个Item。
//
// 前面提到了，在Rust中属性只能用于Item，它有以下七个主要用途：：
//
// 1、条件编译代码
// 2、设置 crate 名称、版本和类型
// 3、禁用 lint 警告
// 4、启用编译器的特性（如宏、全局导入等）
// 5、连接到一个非 Rust 语言的库
// 6、标记函数作为单元测试
// 7、标记函数作为基准测试的某个部分
//
// 表现在Rust中可以在模块、crate 或者项中进行应用：
// (1)在整个 crate 应用的语法为：
// #![crate_attribute] （有感叹号！）
// (2)在模块或者项应用的语法为：
// #[item_attribute] （无感叹号）

